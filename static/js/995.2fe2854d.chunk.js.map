{"version":3,"file":"static/js/995.2fe2854d.chunk.js","mappings":"yMAQA,MA6EA,EA7EsBA,KAClB,MAAMC,GAAOC,EAAAA,EAAAA,QAAyB,MAChCC,GAAcD,EAAAA,EAAAA,QAA4B,MAC1CE,GAASF,EAAAA,EAAAA,QAAyB,OACjCG,EAAOC,IAAYC,EAAAA,EAAAA,UAAsB,MAE1CC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAKC,EAAAA,EAAAA,SAyBX,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,gBAAgBG,QAASA,IAAMR,EAAS,aAAaM,SAAA,EAACF,EAAAA,EAAAA,KAACK,EAAAA,EAAe,CAACP,GAAG,iBAAiB,oEAC7GE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAcK,SA3BpBC,IAAwB,IAADC,EAAAC,EAAAC,EACzCH,EAAEI,iBAEF,MAAMC,EAAc,CAChBd,KACAe,OAAQ,CAAC,CACLxB,aAAgC,QAAnBmB,EAAAnB,EAAYyB,eAAO,IAAAN,OAAA,EAAnBA,EAAqBO,QAAS,GAC3C5B,MAAkB,QAAZsB,EAAAtB,EAAK2B,eAAO,IAAAL,OAAA,EAAZA,EAAcM,QAAS,GAC7BzB,QAAsB,QAAdoB,EAAApB,EAAOwB,eAAO,IAAAJ,OAAA,EAAdA,EAAgBK,QAAS,KAErCC,IAAKzB,EAAQ0B,IAAIC,gBAAgB3B,GAAS,iKAC1C4B,OAAO,GAEXzB,GAAS0B,EAAAA,EAAAA,IAAWR,IACpBhB,EAAS,IAAI,EAagDM,UACjDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SACIqB,KAAK,OACLC,IAAKnC,EACLoC,YAAY,qBACZC,UAAQ,KAEZxB,EAAAA,EAAAA,KAAA,SACIqB,KAAK,OACLC,IAAKhC,EACLiC,YAAY,iFACZC,UAAQ,QAGhBxB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,YACIsB,IAAKjC,EACLkC,YAAY,mDACZC,UAAQ,OAGhBrB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,0EACPF,EAAAA,EAAAA,KAAA,SACIqB,KAAK,OACLI,OAAO,UACPC,SAtCDnB,IACnBA,EAAEoB,OAAOC,OAASrB,EAAEoB,OAAOC,MAAM,IACjCpC,EAASe,EAAEoB,OAAOC,MAAM,GAC5B,QAsCgB5B,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gBAAiBoB,KAAK,SAAQnB,SAAC,+GAI3D,C","sources":["pages/CreateCat.tsx"],"sourcesContent":["// CreateProduct.tsx\r\nimport React, { useId, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../store/slices/CatSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Cat } from '../store/types/types';\r\nimport IconSvgSelector from '../assets/icons/IconSvgSelector';  \r\n\r\nconst CreateProduct = () => {\r\n    const name = useRef<HTMLInputElement>(null);\r\n    const description = useRef<HTMLTextAreaElement>(null);\r\n    const origin = useRef<HTMLInputElement>(null);\r\n    const [image, setImage] = useState<File | null>(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const id = useId();\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const newCat: Cat = {\r\n            id,\r\n            breeds: [{\r\n                description: description.current?.value || '',\r\n                name: name.current?.value || '',\r\n                origin: origin.current?.value || '',\r\n            }],\r\n            url: image ? URL.createObjectURL(image) : 'https://sun1-15.userapi.com/s/v1/if1/b0snhOZfuyISoAS656ksvUHaa8_JMAXOpj_cyppIvvjIDz1np2qvg405Tam9ih98fgvTDQ.jpg?size=400x400&quality=96&crop=0,7,689,689&ava=1',\r\n            liked: false, \r\n        };\r\n        dispatch(addProduct(newCat));\r\n        navigate('/');\r\n    };\r\n\r\n    const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setImage(e.target.files[0]); // Сохраняем файл в состояние\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='create-page'>\r\n            <div className=\"container\">\r\n                <button className='return-button' onClick={() => navigate('/products')}><IconSvgSelector id='return-arrow' />К карточкам</button>\r\n                <form className='create-form' onSubmit={handleSubmit}>\r\n                    <div className='form-flex-container'>\r\n                        <div className='form-item'>\r\n                            <input\r\n                                type=\"text\"\r\n                                ref={name}\r\n                                placeholder='Имя'\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                ref={origin}\r\n                                placeholder='Происхождение'\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className='form-item'>\r\n                            <textarea   \r\n                                ref={description}\r\n                                placeholder='Описание'\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className='form-item'>\r\n                            <label>Изображение: </label>\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleImageChange}\r\n                            />\r\n                        </div>\r\n                        <button className='submit-button'  type=\"submit\">Добавить карточку</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateProduct;\r\n"],"names":["CreateProduct","name","useRef","description","origin","image","setImage","useState","dispatch","useDispatch","navigate","useNavigate","id","useId","_jsx","className","children","_jsxs","onClick","IconSvgSelector","onSubmit","e","_description$current","_name$current","_origin$current","preventDefault","newCat","breeds","current","value","url","URL","createObjectURL","liked","addProduct","type","ref","placeholder","required","accept","onChange","target","files"],"sourceRoot":""}