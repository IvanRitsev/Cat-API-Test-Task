{"version":3,"file":"static/js/995.d5d7ccbd.chunk.js","mappings":"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","sources":["pages/CreateCat.tsx"],"sourcesContent":["import React, { useEffect, useId, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../store/slices/CatSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Cat } from '../store/types/types';\r\nimport IconSvgSelector from '../assets/icons/IconSvgSelector';\r\n\r\nconst CreateProduct = () => {\r\n    const nameRef = useRef<HTMLInputElement>(null);\r\n    const originRef = useRef<HTMLInputElement>(null);\r\n    const descriptionRef = useRef<HTMLTextAreaElement>(null);\r\n    const [image, setImage] = useState<File | null>(null);\r\n\r\n    const [errors, setErrors] = useState({\r\n        name: { touched: false, error: '' },\r\n        origin: { touched: false, error: '' },\r\n        description: { touched: false, error: '' }\r\n    });\r\n\r\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const id = useId();\r\n\r\n    const validateField = (field: string, value: string) => {\r\n        let error = '';\r\n        switch (field) {\r\n            case 'name':\r\n                if (value.trim().length < 4) error = 'Имя должно содержать не менее 4 символов.';\r\n                break;\r\n            case 'origin':\r\n                if (value.trim() === '') error = 'Происхождение не может быть пустым.';\r\n                break;\r\n            case 'description':\r\n                if (value.trim() === '') error = 'Описание не может быть пустым.';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [field]: { touched: true, error }\r\n        }));\r\n    };\r\n\r\n    const isFormValid = () => {\r\n        return !Object.values(errors).some(error => error.error !== '');\r\n    };\r\n\r\n    const handleBlur = (field: string) => {\r\n        const value = field === 'name' ? nameRef.current?.value || '' :\r\n            field === 'origin' ? originRef.current?.value || '' :\r\n                descriptionRef.current?.value || '';\r\n        validateField(field, value);\r\n    };\r\n\r\n    const handleFieldChange = (field: string) => {\r\n        const value = field === 'name' ? nameRef.current?.value || '' :\r\n            field === 'origin' ? originRef.current?.value || '' :\r\n                descriptionRef.current?.value || '';\r\n        validateField(field, value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsSubmitDisabled(!isFormValid());\r\n    }, [errors]);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const newCat: Cat = {\r\n            id,\r\n            breeds: [{\r\n                description: descriptionRef.current?.value || '',\r\n                name: nameRef.current?.value || '',\r\n                origin: originRef.current?.value || '',\r\n            }],\r\n            url: image ? URL.createObjectURL(image) : 'https://sun1-15.userapi.com/s/v1/if1/b0snhOZfuyISoAS656ksvUHaa8_JMAXOpj_cyppIvvjIDz1np2qvg405Tam9ih98fgvTDQ.jpg?size=400x400&quality=96&crop=0,7,689,689&ava=1',\r\n            liked: false,\r\n        };\r\n\r\n        dispatch(addProduct(newCat));\r\n        navigate('/');\r\n    };\r\n\r\n    const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n        } else {\r\n            setImage(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='create-page'>\r\n            <div className=\"container\">\r\n                <button className='return-button' onClick={() => navigate('/products')}>\r\n                    <IconSvgSelector id='return-arrow' />К карточкам\r\n                </button>\r\n                <form className='create-form' onSubmit={handleSubmit}>\r\n                    <div className='form-flex-container'>\r\n                        <div className='form-item'>\r\n                            <div className=\"tooltip\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    ref={nameRef}\r\n                                    placeholder='Имя'\r\n                                    required\r\n                                    onBlur={() => handleBlur('name')}\r\n                                    onChange={() => handleFieldChange('name')}\r\n                                    className={errors.name.error ? 'input-error' : ''}\r\n                                />\r\n                                {errors.name.touched && errors.name.error && (\r\n                                    <span className=\"tooltip-text\">\r\n                                        {errors.name.error}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"tooltip\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    ref={originRef}\r\n                                    placeholder='Происхождение'\r\n                                    required\r\n                                    onBlur={() => handleBlur('origin')}\r\n                                    onChange={() => handleFieldChange('origin')}\r\n                                    className={errors.origin.error ? 'input-error' : ''}\r\n                                />\r\n                                {errors.origin.touched && errors.origin.error && (\r\n                                    <span className=\"tooltip-text\">\r\n                                        {errors.origin.error}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-item'>\r\n                            <div className=\"tooltip\">\r\n                                <textarea\r\n                                    ref={descriptionRef}\r\n                                    placeholder='Описание'\r\n                                    required\r\n                                    onBlur={() => handleBlur('description')}\r\n                                    onChange={() => handleFieldChange('description')}\r\n                                    className={errors.description.error ? 'input-error' : ''}\r\n                                />\r\n                                {errors.description.touched && errors.description.error && (\r\n                                    <span className=\"tooltip-text\">\r\n                                        {errors.description.error}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-item'>\r\n                            <label>Изображение: </label>\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleImageChange}\r\n                            />\r\n                        </div>\r\n                        <button className='submit-button' type=\"submit\" disabled={isSubmitDisabled}>\r\n                            Добавить карточку\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateProduct;\r\n"],"names":["CreateProduct","nameRef","useRef","originRef","descriptionRef","image","setImage","useState","errors","setErrors","name","touched","error","origin","description","isSubmitDisabled","setIsSubmitDisabled","dispatch","useDispatch","navigate","useNavigate","id","useId","validateField","field","value","trim","length","prevErrors","handleBlur","_nameRef$current","_originRef$current","_descriptionRef$curre","current","handleFieldChange","_nameRef$current2","_originRef$current2","_descriptionRef$curre2","useEffect","Object","values","some","_jsx","className","children","_jsxs","onClick","IconSvgSelector","onSubmit","e","_descriptionRef$curre3","_nameRef$current3","_originRef$current3","preventDefault","newCat","breeds","url","URL","createObjectURL","liked","addProduct","type","ref","placeholder","required","onBlur","onChange","accept","target","files","disabled"],"sourceRoot":""}